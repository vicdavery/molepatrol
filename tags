!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARRIVED_AT_BASE	src/state_machine.py	/^    ARRIVED_AT_BASE = 5$/;"	v	class:Event
ARRIVED_AT_MOLEHILL	src/state_machine.py	/^    ARRIVED_AT_MOLEHILL = 1$/;"	v	class:Event
ArgumentParser	test/suite.py	/^from argparse import ArgumentParser$/;"	i
BatteryMonitor	src/battery_monitor.py	/^class BatteryMonitor(object):$/;"	c	inherits:object
BatteryMonitor	test/battery_monitor_test.py	/^from battery_monitor import BatteryMonitor$/;"	i
BatteryMonitor	test/motor_test.py	/^from battery_monitor import BatteryMonitor$/;"	i
BatteryMonitor	test/scare_system_test.py	/^from battery_monitor import BatteryMonitor$/;"	i
BatteryMonitorTestCase	test/battery_monitor_test.py	/^class BatteryMonitorTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
CHARGING	src/state_machine.py	/^    CHARGING = 3$/;"	v	class:State
DONE_PATROLLING	src/state_machine.py	/^    DONE_PATROLLING = 8$/;"	v	class:Event
DONE_SCANNING	src/state_machine.py	/^    DONE_SCANNING = 7$/;"	v	class:Event
DONE_SCARING	src/state_machine.py	/^    DONE_SCARING = 2$/;"	v	class:Event
DiscoveryTestCase	test/discovery_test.py	/^class DiscoveryTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
DriveSystem	src/drive_system.py	/^class DriveSystem(object):$/;"	c	inherits:object
DriveSystem	test/drive_system_test.py	/^from drive_system import DriveSystem$/;"	i
DriveSystemTestCase	test/drive_system_test.py	/^class DriveSystemTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
EMPTY	src/battery_monitor.py	/^    EMPTY = 0$/;"	v	class:BatteryMonitor
Encoder	src/motor_unit.py	/^from optical_encoder import Encoder$/;"	i
Encoder	src/optical_encoder.py	/^class Encoder(object):$/;"	c	inherits:object
Encoder	test/encoder_test.py	/^from optical_encoder import Encoder$/;"	i
Encoder	test/motor_unit_test.py	/^from optical_encoder import Encoder$/;"	i
EncoderTestCase	test/encoder_test.py	/^class EncoderTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
Enum	src/drive_system.py	/^from enum import Enum$/;"	i
Enum	src/patroller_gpio.py	/^from enum import Enum$/;"	i
Enum	test/gpio_test.py	/^from enum import Enum$/;"	i
Event	src/state_machine.py	/^class Event(object):$/;"	c	inherits:object
Event	test/state_machine_test.py	/^from state_machine import State, Event, StateMachine$/;"	i
FULLY_CHARGED	src/battery_monitor.py	/^    FULLY_CHARGED = 100$/;"	v	class:BatteryMonitor
FULLY_CHARGED	src/state_machine.py	/^    FULLY_CHARGED = 4$/;"	v	class:Event
Fence	src/terrain.py	/^    Fence = 7$/;"	v	class:TerrainType
Flowerbed	src/terrain.py	/^    Flowerbed = 6$/;"	v	class:TerrainType
GPIO	src/motor.py	/^from patroller_gpio import Patroller_GPIO as GPIO$/;"	i
GPIO	src/patroller_gpio.py	/^import RPi.GPIO as GPIO$/;"	i
GPIO	test/gpio_test.py	/^import RPi.GPIO as GPIO$/;"	i
GPIOTestCase	test/gpio_test.py	/^class GPIOTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
Grass	src/terrain.py	/^    Grass = 1$/;"	v	class:TerrainType
IDLE	src/state_machine.py	/^    IDLE = 0$/;"	v	class:State
INPUT	src/RPi/GPIO.py	/^INPUT = 2$/;"	v
InvalidEventException	src/patrol_exceptions.py	/^class InvalidEventException(Exception):$/;"	c	inherits:Exception
InvalidEventException	src/state_machine.py	/^from patrol_exceptions import InvalidEventException$/;"	i
InvalidEventException	test/state_machine_test.py	/^from patrol_exceptions import InvalidEventException$/;"	i
LOW_BATTERY	src/state_machine.py	/^    LOW_BATTERY = 3$/;"	v	class:Event
Molehill	src/terrain.py	/^    Molehill = 2$/;"	v	class:TerrainType
Motor	src/drive_system.py	/^from motor import Motor$/;"	i
Motor	src/motor.py	/^class Motor(object):$/;"	c	inherits:object
Motor	src/motor_unit.py	/^from motor import Motor$/;"	i
Motor	test/encoder_test.py	/^from motor import Motor$/;"	i
Motor	test/motor_test.py	/^from motor import Motor$/;"	i
MotorPosition	src/drive_system.py	/^    class MotorPosition(Enum):$/;"	c	class:DriveSystem	inherits:Enum
MotorStatus	src/drive_system.py	/^    class MotorStatus(Enum):$/;"	c	class:DriveSystem	inherits:Enum
MotorTestCase	test/motor_test.py	/^class MotorTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
MotorUnit	src/motor_unit.py	/^class MotorUnit(object):$/;"	c	inherits:object
MotorUnit	test/motor_unit_test.py	/^from motor_unit import MotorUnit$/;"	i
MotorUnitTestCase	test/motor_unit_test.py	/^class MotorUnitTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
NoTileException	src/patrol_exceptions.py	/^class NoTileException(Exception):$/;"	c	inherits:Exception
NoTileException	src/terrain.py	/^from patrol_exceptions import OutOfRangeException, NoTileException$/;"	i
NoTileException	test/terrain_test.py	/^from patrol_exceptions import NoTileException, OutOfRangeException$/;"	i
OUTPUT	src/RPi/GPIO.py	/^OUTPUT = 1$/;"	v
OutOfRangeException	src/patrol_exceptions.py	/^class OutOfRangeException(Exception):$/;"	c	inherits:Exception
OutOfRangeException	src/terrain.py	/^from patrol_exceptions import OutOfRangeException, NoTileException$/;"	i
OutOfRangeException	test/terrain_test.py	/^from patrol_exceptions import NoTileException, OutOfRangeException$/;"	i
PATROLLING	src/state_machine.py	/^    PATROLLING = 1$/;"	v	class:State
Patroller_GPIO	src/patroller_gpio.py	/^class Patroller_GPIO(object):$/;"	c	inherits:object
Patroller_GPIO	test/gpio_test.py	/^from patroller_gpio import Patroller_GPIO$/;"	i
Paving	src/terrain.py	/^    Paving = 5$/;"	v	class:TerrainType
Pins	src/patroller_gpio.py	/^    class Pins(Enum):$/;"	c	class:Patroller_GPIO	inherits:Enum
Pond	src/terrain.py	/^    Pond = 4$/;"	v	class:TerrainType
PositionScanner	src/discovery.py	/^class PositionScanner(object):$/;"	c	inherits:object
PositionScanner	test/discovery_test.py	/^from discovery import PositionScanner$/;"	i
RETURNING_TO_BASE	src/state_machine.py	/^    RETURNING_TO_BASE = 2$/;"	v	class:State
RPi	src/patroller_gpio.py	/^import RPi.GPIO as GPIO$/;"	i
RPi	test/gpio_test.py	/^import RPi.GPIO as GPIO$/;"	i
Receiver	src/optical_encoder.py	/^class Receiver(threading.Thread):$/;"	c	inherits:threading.Thread
SCANNING	src/state_machine.py	/^    SCANNING = 5$/;"	v	class:State
SCANNING_TIME	src/state_machine.py	/^    SCANNING_TIME = 6$/;"	v	class:Event
SCARING	src/state_machine.py	/^    SCARING = 4$/;"	v	class:State
START_PATROL	src/state_machine.py	/^    START_PATROL = 0$/;"	v	class:Event
ScanningTestCase	test/scanning_test.py	/^class ScanningTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
ScareSystemTestCase	test/scare_system_test.py	/^class ScareSystemTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
Scarer	src/scarer.py	/^class Scarer(object):$/;"	c	inherits:object
Scarer	test/scare_system_test.py	/^from scarer import Scarer$/;"	i
State	src/state_machine.py	/^class State(object):$/;"	c	inherits:object
State	test/state_machine_test.py	/^from state_machine import State, Event, StateMachine$/;"	i
StateMachine	src/state_machine.py	/^class StateMachine(object):$/;"	c	inherits:object
StateMachine	test/state_machine_test.py	/^from state_machine import State, Event, StateMachine$/;"	i
StateMachineCreationTestCase	test/state_machine_test.py	/^class StateMachineCreationTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
Terrain	src/terrain.py	/^class Terrain(object):$/;"	c	inherits:object
Terrain	test/terrain_test.py	/^from terrain import TerrainDescriptor, TerrainType, Terrain$/;"	i
TerrainDescriptor	src/terrain.py	/^class TerrainDescriptor(object):$/;"	c	inherits:object
TerrainDescriptor	test/terrain_test.py	/^from terrain import TerrainDescriptor, TerrainType, Terrain$/;"	i
TerrainDescriptorTestCase	test/terrain_test.py	/^class TerrainDescriptorTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
TerrainGridTestCase	test/terrain_test.py	/^class TerrainGridTestCase(unittest.TestCase):$/;"	c	inherits:unittest.TestCase
TerrainType	src/discovery.py	/^from terrain import TerrainType$/;"	i
TerrainType	src/terrain.py	/^class TerrainType(object):$/;"	c	inherits:object
TerrainType	test/discovery_test.py	/^from terrain import TerrainType$/;"	i
TerrainType	test/terrain_test.py	/^from terrain import TerrainDescriptor, TerrainType, Terrain$/;"	i
TestSettings	test/battery_monitor_test.py	/^from suite import TestSettings$/;"	i
TestSettings	test/discovery_test.py	/^from suite import TestSettings$/;"	i
TestSettings	test/gpio_test.py	/^from suite import TestSettings$/;"	i
TestSettings	test/motor_test.py	/^from suite import TestSettings$/;"	i
TestSettings	test/scare_system_test.py	/^from suite import TestSettings$/;"	i
TestSettings	test/suite.py	/^class TestSettings(object):$/;"	c	inherits:object
Tree	src/terrain.py	/^    Tree = 3$/;"	v	class:TerrainType
Unset	src/terrain.py	/^    Unset = 0$/;"	v	class:TerrainType
__init__	src/battery_monitor.py	/^    def __init__(self):$/;"	m	class:BatteryMonitor	access:public
__init__	src/drive_system.py	/^    def __init__(self, num_motors):$/;"	m	class:DriveSystem	access:public
__init__	src/motor.py	/^    def __init__(self, motor_id, motor_sensor_id):$/;"	m	class:Motor	access:public
__init__	src/optical_encoder.py	/^    def __init__(self):$/;"	m	class:Encoder	access:public
__init__	src/optical_encoder.py	/^    def __init__(self, q):$/;"	m	class:Receiver	access:public
__init__	src/patrol_exceptions.py	/^    def __init__(self):$/;"	m	class:InvalidEventException	access:public
__init__	src/patrol_exceptions.py	/^    def __init__(self, x, y):$/;"	m	class:NoTileException	access:public
__init__	src/patrol_exceptions.py	/^    def __init__(self, x, y):$/;"	m	class:OutOfRangeException	access:public
__init__	src/patroller_gpio.py	/^    def __init__(self):$/;"	m	class:Patroller_GPIO	access:public
__init__	src/state_machine.py	/^    def __init__(self):$/;"	m	class:StateMachine	access:public
__init__	src/terrain.py	/^    def __init__(self, terrain_type):$/;"	m	class:TerrainDescriptor	access:public
__init__	src/terrain.py	/^    def __init__(self, x, y):$/;"	m	class:Terrain	access:public
__init__	test/suite.py	/^    def __init__(self):$/;"	m	class:TestSettings	access:public
__str__	src/patrol_exceptions.py	/^    def __str__(self):$/;"	m	class:InvalidEventException	file:	access:private
__str__	src/patrol_exceptions.py	/^    def __str__(self):$/;"	m	class:NoTileException	file:	access:private
__str__	src/patrol_exceptions.py	/^    def __str__(self):$/;"	m	class:OutOfRangeException	file:	access:private
backward	src/drive_system.py	/^    def backward(self, distance):$/;"	m	class:DriveSystem	access:public
backward	src/motor.py	/^    def backward(self, rate):$/;"	m	class:Motor	access:public
backward_pattern	test/encoder_test.py	/^    backward_pattern = [1,2,3,4]$/;"	v	class:EncoderTestCase
create_required_motors	src/drive_system.py	/^    def create_required_motors(self, num_motors):$/;"	m	class:DriveSystem	access:public
current_drain	src/motor.py	/^    def current_drain(self):$/;"	m	class:Motor	access:public
forward	src/drive_system.py	/^    def forward(self, distance):$/;"	m	class:DriveSystem	access:public
forward	src/motor.py	/^    def forward(self, rate):$/;"	m	class:Motor	access:public
forward_pattern	test/encoder_test.py	/^    forward_pattern = [1,3,4,2]$/;"	v	class:EncoderTestCase
front_left	src/drive_system.py	/^        front_left = 2$/;"	v	class:DriveSystem.MotorPosition
front_right	src/drive_system.py	/^        front_right = 3$/;"	v	class:DriveSystem.MotorPosition
get_bearing	src/drive_system.py	/^    def get_bearing(self):$/;"	m	class:DriveSystem	access:public
get_drain_rate	src/battery_monitor.py	/^    def get_drain_rate(self):$/;"	m	class:BatteryMonitor	access:public
get_input	src/optical_encoder.py	/^    def get_input(self,feed):$/;"	m	class:Encoder	access:public
get_motor_status	src/drive_system.py	/^    def get_motor_status(self, motor_posn):$/;"	m	class:DriveSystem	access:public
get_position	src/drive_system.py	/^    def get_position(self):$/;"	m	class:DriveSystem	access:public
get_signals_per_revolution	src/optical_encoder.py	/^    def get_signals_per_revolution(cls):$/;"	m	class:Encoder	access:public
get_size	src/terrain.py	/^    def get_size(self):$/;"	m	class:Terrain	access:public
get_state	src/state_machine.py	/^    def get_state(self):$/;"	m	class:StateMachine	access:public
get_status	src/battery_monitor.py	/^    def get_status(self):$/;"	m	class:BatteryMonitor	access:public
get_tile_type	src/terrain.py	/^    def get_tile_type(self, x, y):$/;"	m	class:Terrain	access:public
get_type	src/terrain.py	/^    def get_type(self):$/;"	m	class:TerrainDescriptor	access:public
handle_event	src/state_machine.py	/^    def handle_event(self, event):$/;"	m	class:StateMachine	access:public
high	src/patroller_gpio.py	/^    def high(self, pin):$/;"	m	class:Patroller_GPIO	access:public
input	src/RPi/GPIO.py	/^def input(pin) : pass$/;"	f	access:public
is_input	src/patroller_gpio.py	/^    def is_input(self, pin):$/;"	m	class:Patroller_GPIO	access:public
is_output	src/patroller_gpio.py	/^    def is_output(self, pin):$/;"	m	class:Patroller_GPIO	access:public
left	src/drive_system.py	/^        left = 0$/;"	v	class:DriveSystem.MotorPosition
machine	src/state_machine.py	/^    machine = { State.IDLE : {Event.START_PATROL : State.PATROLLING,$/;"	v	class:StateMachine
math	src/drive_system.py	/^import math$/;"	i
mock	test/discovery_test.py	/^import unittest.mock$/;"	i
mock	test/motor_test.py	/^import unittest.mock$/;"	i
mock	test/scare_system_test.py	/^import unittest.mock$/;"	i
motor_1_current	src/patroller_gpio.py	/^        motor_1_current = 3$/;"	v	class:Patroller_GPIO.Pins
motor_1_direction	src/patroller_gpio.py	/^        motor_1_direction = 1$/;"	v	class:Patroller_GPIO.Pins
motor_1_encoder_1	src/patroller_gpio.py	/^        motor_1_encoder_1 = 4$/;"	v	class:Patroller_GPIO.Pins
motor_1_encoder_2	src/patroller_gpio.py	/^        motor_1_encoder_2 = 5$/;"	v	class:Patroller_GPIO.Pins
motor_1_encoder_combined	src/patroller_gpio.py	/^        motor_1_encoder_combined = 6$/;"	v	class:Patroller_GPIO.Pins
motor_1_pwm	src/patroller_gpio.py	/^        motor_1_pwm = 2$/;"	v	class:Patroller_GPIO.Pins
motor_2_current	src/patroller_gpio.py	/^        motor_2_current = 3$/;"	v	class:Patroller_GPIO.Pins
motor_2_direction	src/patroller_gpio.py	/^        motor_2_direction = 1$/;"	v	class:Patroller_GPIO.Pins
motor_2_encoder_1	src/patroller_gpio.py	/^        motor_2_encoder_1 = 4$/;"	v	class:Patroller_GPIO.Pins
motor_2_encoder_2	src/patroller_gpio.py	/^        motor_2_encoder_2 = 5$/;"	v	class:Patroller_GPIO.Pins
motor_2_encoder_combined	src/patroller_gpio.py	/^        motor_2_encoder_combined = 6$/;"	v	class:Patroller_GPIO.Pins
motor_2_pwm	src/patroller_gpio.py	/^        motor_2_pwm = 2$/;"	v	class:Patroller_GPIO.Pins
not_present	src/drive_system.py	/^        not_present = -1$/;"	v	class:DriveSystem.MotorStatus
output	src/RPi/GPIO.py	/^def output(pin, value): pass$/;"	f	access:public
pin_function	src/RPi/GPIO.py	/^def pin_function(pin): pass$/;"	f	access:public
queue	src/optical_encoder.py	/^import queue$/;"	i
ready	src/drive_system.py	/^        ready = 1$/;"	v	class:DriveSystem.MotorStatus
rear_left	src/drive_system.py	/^        rear_left = 4$/;"	v	class:DriveSystem.MotorPosition
rear_right	src/drive_system.py	/^        rear_right = 5$/;"	v	class:DriveSystem.MotorPosition
right	src/drive_system.py	/^        right = 1$/;"	v	class:DriveSystem.MotorPosition
run	src/optical_encoder.py	/^    def run(self):$/;"	m	class:Receiver	access:public
run_slow_tests	test/suite.py	/^    run_slow_tests = False$/;"	v	class:TestSettings
run_visual_tests	test/suite.py	/^    run_visual_tests = False$/;"	v	class:TestSettings
scan	src/discovery.py	/^    def scan(self):$/;"	m	class:PositionScanner	access:public
scare	src/scarer.py	/^    def scare(self):$/;"	m	class:Scarer	access:public
set_high	src/patroller_gpio.py	/^    def set_high(self, pin): pass$/;"	m	class:Patroller_GPIO	access:public
set_high	src/patroller_gpio.py	/^    def set_high(self, pin):$/;"	m	class:Patroller_GPIO	access:public
set_low	src/patroller_gpio.py	/^    def set_low(self, pin): pass$/;"	m	class:Patroller_GPIO	access:public
set_low	src/patroller_gpio.py	/^    def set_low(self, pin):$/;"	m	class:Patroller_GPIO	access:public
set_tile	src/terrain.py	/^    def set_tile(self, x, y, td):$/;"	m	class:Terrain	access:public
set_type	src/terrain.py	/^    def set_type(self, terrain_type):$/;"	m	class:TerrainDescriptor	access:public
settings	test/suite.py	/^settings = TestSettings()$/;"	v
setup	src/RPi/GPIO.py	/^def setup(pin, func): pass$/;"	f	access:public
spin	src/drive_system.py	/^    def spin(self, degrees):$/;"	m	class:DriveSystem	access:public
stop	src/motor.py	/^    def stop(self):$/;"	m	class:Motor	access:public
stop_scaring	src/scarer.py	/^    def stop_scaring(self):$/;"	m	class:Scarer	access:public
sys	test/suite.py	/^import sys$/;"	i
test120DegreeTravel	test/drive_system_test.py	/^    def test120DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test150DegreeTravel	test/drive_system_test.py	/^    def test150DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test180DegreeTravel	test/drive_system_test.py	/^    def test180DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test210DegreeTravel	test/drive_system_test.py	/^    def test210DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test240DegreeTravel	test/drive_system_test.py	/^    def test240DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test270DegreeTravel	test/drive_system_test.py	/^    def test270DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test300DegreeTravel	test/drive_system_test.py	/^    def test300DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test30DegreeAntiClock	test/drive_system_test.py	/^    def test30DegreeAntiClock(self):$/;"	m	class:DriveSystemTestCase	access:public
test30DegreeClock	test/drive_system_test.py	/^    def test30DegreeClock(self):$/;"	m	class:DriveSystemTestCase	access:public
test30DegreeTravel	test/drive_system_test.py	/^    def test30DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test330DegreeTravel	test/drive_system_test.py	/^    def test330DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test360DegreeAntiClock	test/drive_system_test.py	/^    def test360DegreeAntiClock(self):$/;"	m	class:DriveSystemTestCase	access:public
test360DegreeClock	test/drive_system_test.py	/^    def test360DegreeClock(self):$/;"	m	class:DriveSystemTestCase	access:public
test360DegreeTravel	test/drive_system_test.py	/^    def test360DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test60DegreeTravel	test/drive_system_test.py	/^    def test60DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
test720DegreeAntiClock	test/drive_system_test.py	/^    def test720DegreeAntiClock(self):$/;"	m	class:DriveSystemTestCase	access:public
test720DegreeClock	test/drive_system_test.py	/^    def test720DegreeClock(self):$/;"	m	class:DriveSystemTestCase	access:public
test90DegreeTravel	test/drive_system_test.py	/^    def test90DegreeTravel(self):$/;"	m	class:DriveSystemTestCase	access:public
testAddDescriptors	test/terrain_test.py	/^    def testAddDescriptors(self):$/;"	m	class:TerrainGridTestCase	access:public
testBackward100Percent	test/motor_test.py	/^    def testBackward100Percent(self):$/;"	m	class:MotorTestCase	access:public
testBackward50Percent	test/motor_test.py	/^    def testBackward50Percent(self):$/;"	m	class:MotorTestCase	access:public
testBackwardHalfMetre	test/drive_system_test.py	/^    def testBackwardHalfMetre(self):$/;"	m	class:DriveSystemTestCase	access:public
testBackwardOneMetre	test/drive_system_test.py	/^    def testBackwardOneMetre(self):$/;"	m	class:DriveSystemTestCase	access:public
testBackwardTwoMetres	test/drive_system_test.py	/^    def testBackwardTwoMetres(self):$/;"	m	class:DriveSystemTestCase	access:public
testBadCreationOfDriveSystem	test/drive_system_test.py	/^    def testBadCreationOfDriveSystem(self):$/;"	m	class:DriveSystemTestCase	access:public
testCaptureImage	test/scanning_test.py	/^    def testCaptureImage(self):$/;"	m	class:ScanningTestCase	access:public
testCharging_ArrivedAtBase	test/state_machine_test.py	/^    def testCharging_ArrivedAtBase(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_ArrivedAtMolehill	test/state_machine_test.py	/^    def testCharging_ArrivedAtMolehill(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_DonePatrolling	test/state_machine_test.py	/^    def testCharging_DonePatrolling(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_DoneScanning	test/state_machine_test.py	/^    def testCharging_DoneScanning(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_DoneScaring	test/state_machine_test.py	/^    def testCharging_DoneScaring(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_FullyCharged	test/state_machine_test.py	/^    def testCharging_FullyCharged(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_LowBattery	test/state_machine_test.py	/^    def testCharging_LowBattery(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_ScanningTime	test/state_machine_test.py	/^    def testCharging_ScanningTime(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCharging_StartPatrol	test/state_machine_test.py	/^    def testCharging_StartPatrol(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCreate	test/state_machine_test.py	/^    def testCreate(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testCreateGrid	test/terrain_test.py	/^    def testCreateGrid(self):$/;"	m	class:TerrainGridTestCase	access:public
testCreateTypes	test/terrain_test.py	/^    def testCreateTypes(self):$/;"	m	class:TerrainDescriptorTestCase	access:public
testCurrentCharge	test/battery_monitor_test.py	/^    def testCurrentCharge(self):$/;"	m	class:BatteryMonitorTestCase	access:public
testCurrentIncreaseWithHigherOutput	test/motor_test.py	/^    def testCurrentIncreaseWithHigherOutput(self):$/;"	m	class:MotorTestCase	access:public
testDepthScan	test/discovery_test.py	/^    def testDepthScan(self):$/;"	m	class:DiscoveryTestCase	access:public
testDrainRateReport	test/battery_monitor_test.py	/^    def testDrainRateReport(self):$/;"	m	class:BatteryMonitorTestCase	access:public
testEncoderForward	test/encoder_test.py	/^    def testEncoderForward(self):$/;"	m	class:EncoderTestCase	access:public
testEncoderInput1	test/encoder_test.py	/^    def testEncoderInput1(self):$/;"	m	class:EncoderTestCase	access:public
testEncoderInput2	test/encoder_test.py	/^    def testEncoderInput2(self):$/;"	m	class:EncoderTestCase	access:public
testForward100Percent	test/motor_test.py	/^    def testForward100Percent(self):$/;"	m	class:MotorTestCase	access:public
testForward50Percent	test/motor_test.py	/^    def testForward50Percent(self):$/;"	m	class:MotorTestCase	access:public
testForwardFast	test/motor_unit_test.py	/^    def testForwardFast(self):$/;"	m	class:MotorUnitTestCase	access:public
testForwardHalfMetre	test/drive_system_test.py	/^    def testForwardHalfMetre(self):$/;"	m	class:DriveSystemTestCase	access:public
testForwardMedium	test/motor_unit_test.py	/^    def testForwardMedium(self):$/;"	m	class:MotorUnitTestCase	access:public
testForwardOneMetre	test/drive_system_test.py	/^    def testForwardOneMetre(self):$/;"	m	class:DriveSystemTestCase	access:public
testForwardOneRevolution	test/motor_unit_test.py	/^    def testForwardOneRevolution(self):$/;"	m	class:MotorUnitTestCase	access:public
testForwardSlow	test/motor_unit_test.py	/^    def testForwardSlow(self):$/;"	m	class:MotorUnitTestCase	access:public
testForwardTwoMetres	test/drive_system_test.py	/^    def testForwardTwoMetres(self):$/;"	m	class:DriveSystemTestCase	access:public
testFourMotorDriveSystem	test/drive_system_test.py	/^    def testFourMotorDriveSystem(self):$/;"	m	class:DriveSystemTestCase	access:public
testFullMatrixPopulationScan	test/discovery_test.py	/^    def testFullMatrixPopulationScan(self):$/;"	m	class:DiscoveryTestCase	access:public
testFullSpinScan	test/discovery_test.py	/^    def testFullSpinScan(self):$/;"	m	class:DiscoveryTestCase	access:public
testFullyCharged	test/battery_monitor_test.py	/^    def testFullyCharged(self):$/;"	m	class:BatteryMonitorTestCase	access:public
testIdentifyAnimal	test/scanning_test.py	/^    def testIdentifyAnimal(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyBush	test/scanning_test.py	/^    def testIdentifyBush(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyGrass	test/scanning_test.py	/^    def testIdentifyGrass(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyHuman	test/scanning_test.py	/^    def testIdentifyHuman(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyMolehill	test/scanning_test.py	/^    def testIdentifyMolehill(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyPaving	test/scanning_test.py	/^    def testIdentifyPaving(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyPerimeter	test/scanning_test.py	/^    def testIdentifyPerimeter(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyTree	test/scanning_test.py	/^    def testIdentifyTree(self):$/;"	m	class:ScanningTestCase	access:public
testIdentifyWater	test/scanning_test.py	/^    def testIdentifyWater(self):$/;"	m	class:ScanningTestCase	access:public
testIdle_ArrivedAtBase	test/state_machine_test.py	/^    def testIdle_ArrivedAtBase(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_ArrivedAtMolehill	test/state_machine_test.py	/^    def testIdle_ArrivedAtMolehill(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_DonePatrolling	test/state_machine_test.py	/^    def testIdle_DonePatrolling(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_DoneScanning	test/state_machine_test.py	/^    def testIdle_DoneScanning(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_DoneScaring	test/state_machine_test.py	/^    def testIdle_DoneScaring(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_FullyCharged	test/state_machine_test.py	/^    def testIdle_FullyCharged(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_LowBattery	test/state_machine_test.py	/^    def testIdle_LowBattery(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_ScanningTime	test/state_machine_test.py	/^    def testIdle_ScanningTime(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testIdle_StartPatrol	test/state_machine_test.py	/^    def testIdle_StartPatrol(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testMotor1CurrentSensor	test/gpio_test.py	/^    def testMotor1CurrentSensor(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
testMotor1Output	test/gpio_test.py	/^    def testMotor1Output(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
testMotor2CurrentSensor	test/gpio_test.py	/^    def testMotor2CurrentSensor(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
testMotor2Output	test/gpio_test.py	/^    def testMotor2Output(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
testOpticalEncoder1	test/gpio_test.py	/^    def testOpticalEncoder1(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
testOpticalEncoder2	test/gpio_test.py	/^    def testOpticalEncoder2(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
testOutOfBoundsRequests	test/terrain_test.py	/^    def testOutOfBoundsRequests(self):$/;"	m	class:TerrainGridTestCase	access:public
testPatrolling_ArrivedAtBase	test/state_machine_test.py	/^    def testPatrolling_ArrivedAtBase(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_ArrivedAtMolehill	test/state_machine_test.py	/^    def testPatrolling_ArrivedAtMolehill(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_DonePatrolling	test/state_machine_test.py	/^    def testPatrolling_DonePatrolling(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_DoneScanning	test/state_machine_test.py	/^    def testPatrolling_DoneScanning(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_DoneScaring	test/state_machine_test.py	/^    def testPatrolling_DoneScaring(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_FullyCharged	test/state_machine_test.py	/^    def testPatrolling_FullyCharged(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_LowBattery	test/state_machine_test.py	/^    def testPatrolling_LowBattery(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_ScanningTime	test/state_machine_test.py	/^    def testPatrolling_ScanningTime(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testPatrolling_StartPatrol	test/state_machine_test.py	/^    def testPatrolling_StartPatrol(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_ArrivedAtBase	test/state_machine_test.py	/^    def testReturningToBase_ArrivedAtBase(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_ArrivedAtMolehill	test/state_machine_test.py	/^    def testReturningToBase_ArrivedAtMolehill(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_DonePatrolling	test/state_machine_test.py	/^    def testReturningToBase_DonePatrolling(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_DoneScanning	test/state_machine_test.py	/^    def testReturningToBase_DoneScanning(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_DoneScaring	test/state_machine_test.py	/^    def testReturningToBase_DoneScaring(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_FullyCharged	test/state_machine_test.py	/^    def testReturningToBase_FullyCharged(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_LowBattery	test/state_machine_test.py	/^    def testReturningToBase_LowBattery(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_ScanningTime	test/state_machine_test.py	/^    def testReturningToBase_ScanningTime(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReturningToBase_StartPatrol	test/state_machine_test.py	/^    def testReturningToBase_StartPatrol(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testReverseFast	test/motor_unit_test.py	/^    def testReverseFast(self):$/;"	m	class:MotorUnitTestCase	access:public
testReverseMedium	test/motor_unit_test.py	/^    def testReverseMedium(self):$/;"	m	class:MotorUnitTestCase	access:public
testReverseOneRevolution	test/motor_unit_test.py	/^    def testReverseOneRevolution(self):$/;"	m	class:MotorUnitTestCase	access:public
testReverseSlow	test/motor_unit_test.py	/^    def testReverseSlow(self):$/;"	m	class:MotorUnitTestCase	access:public
testScanAheadFindFence	test/discovery_test.py	/^    def testScanAheadFindFence(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanAheadFindFlowerbed	test/discovery_test.py	/^    def testScanAheadFindFlowerbed(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanAheadFindGrass	test/discovery_test.py	/^    def testScanAheadFindGrass(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanAheadFindMolehill	test/discovery_test.py	/^    def testScanAheadFindMolehill(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanAheadFindPaving	test/discovery_test.py	/^    def testScanAheadFindPaving(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanAheadFindPond	test/discovery_test.py	/^    def testScanAheadFindPond(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanAheadFindTree	test/discovery_test.py	/^    def testScanAheadFindTree(self):$/;"	m	class:DiscoveryTestCase	access:public
testScanning_ArrivedAtBase	test/state_machine_test.py	/^    def testScanning_ArrivedAtBase(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_ArrivedAtMolehill	test/state_machine_test.py	/^    def testScanning_ArrivedAtMolehill(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_DoneScanning	test/state_machine_test.py	/^    def testScanning_DoneScanning(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_DoneScaring	test/state_machine_test.py	/^    def testScanning_DoneScaring(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_FullyCharged	test/state_machine_test.py	/^    def testScanning_FullyCharged(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_LowBattery	test/state_machine_test.py	/^    def testScanning_LowBattery(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_ScanningTime	test/state_machine_test.py	/^    def testScanning_ScanningTime(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScanning_StartPatrol	test/state_machine_test.py	/^    def testScanning_StartPatrol(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScarer	test/scare_system_test.py	/^    def testScarer(self):$/;"	m	class:ScareSystemTestCase	access:public
testScaring_ArrivedAtBase	test/state_machine_test.py	/^    def testScaring_ArrivedAtBase(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_ArrivedAtMolehill	test/state_machine_test.py	/^    def testScaring_ArrivedAtMolehill(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_DoneScanning	test/state_machine_test.py	/^    def testScaring_DoneScanning(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_DoneScaring	test/state_machine_test.py	/^    def testScaring_DoneScaring(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_FullyCharged	test/state_machine_test.py	/^    def testScaring_FullyCharged(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_LowBattery	test/state_machine_test.py	/^    def testScaring_LowBattery(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_ScanningTime	test/state_machine_test.py	/^    def testScaring_ScanningTime(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testScaring_StartPatrol	test/state_machine_test.py	/^    def testScaring_StartPatrol(self):$/;"	m	class:StateMachineCreationTestCase	access:public
testSetTileType	test/terrain_test.py	/^    def testSetTileType(self):$/;"	m	class:TerrainGridTestCase	access:public
testSpin30AndScan	test/discovery_test.py	/^    def testSpin30AndScan(self):$/;"	m	class:DiscoveryTestCase	access:public
testStaticData	test/encoder_test.py	/^    def testStaticData(self):$/;"	m	class:EncoderTestCase	access:public
testStitchingScan	test/discovery_test.py	/^    def testStitchingScan(self):$/;"	m	class:DiscoveryTestCase	access:public
testTimeRemaining	test/battery_monitor_test.py	/^    def testTimeRemaining(self):$/;"	m	class:BatteryMonitorTestCase	access:public
testTimeRemainingDecreases	test/battery_monitor_test.py	/^    def testTimeRemainingDecreases(self):$/;"	m	class:BatteryMonitorTestCase	access:public
testTwoMotorDriveSystemCreation	test/drive_system_test.py	/^    def testTwoMotorDriveSystemCreation(self):$/;"	m	class:DriveSystemTestCase	access:public
testUnsetTiles	test/terrain_test.py	/^    def testUnsetTiles(self):$/;"	m	class:TerrainGridTestCase	access:public
testUpdateType	test/terrain_test.py	/^    def testUpdateType(self):$/;"	m	class:TerrainDescriptorTestCase	access:public
test_motor1_backward	test/gpio_test.py	/^    def test_motor1_backward(self, GPIO): pass$/;"	m	class:GPIOTestCase	access:public
test_motor1_different_speeds	test/gpio_test.py	/^    def test_motor1_different_speeds(self, GPIO): pass$/;"	m	class:GPIOTestCase	access:public
test_motor1_forward	test/gpio_test.py	/^    def test_motor1_forward(self, GPIO):$/;"	m	class:GPIOTestCase	access:public
test_motor2_backward	test/gpio_test.py	/^    def test_motor2_backward(self, GPIO): pass$/;"	m	class:GPIOTestCase	access:public
test_motor2_different_speeds	test/gpio_test.py	/^    def test_motor2_different_speeds(self, GPIO): pass$/;"	m	class:GPIOTestCase	access:public
test_motor2_forward	test/gpio_test.py	/^    def test_motor2_forward(self, GPIO): pass$/;"	m	class:GPIOTestCase	access:public
threading	src/optical_encoder.py	/^import threading$/;"	i
time	test/battery_monitor_test.py	/^import time$/;"	i
time	test/motor_test.py	/^import time$/;"	i
travel	src/drive_system.py	/^    def travel(self, distance):$/;"	m	class:DriveSystem	access:public
ts	test/suite.py	/^    ts = unittest.defaultTestLoader.discover(start_dir='.', pattern='*_test.py')$/;"	v	class:TestSettings
unittest	test/battery_monitor_test.py	/^import unittest$/;"	i
unittest	test/discovery_test.py	/^import unittest$/;"	i
unittest	test/discovery_test.py	/^import unittest.mock$/;"	i
unittest	test/drive_system_test.py	/^import unittest$/;"	i
unittest	test/encoder_test.py	/^import unittest$/;"	i
unittest	test/gpio_test.py	/^import unittest$/;"	i
unittest	test/motor_test.py	/^import unittest$/;"	i
unittest	test/motor_test.py	/^import unittest.mock$/;"	i
unittest	test/motor_unit_test.py	/^import unittest$/;"	i
unittest	test/scanning_test.py	/^import unittest$/;"	i
unittest	test/scare_system_test.py	/^import unittest$/;"	i
unittest	test/scare_system_test.py	/^import unittest.mock$/;"	i
unittest	test/state_machine_test.py	/^import unittest$/;"	i
unittest	test/suite.py	/^import unittest$/;"	i
unittest	test/terrain_test.py	/^import unittest$/;"	i
use_mocks	test/suite.py	/^    use_mocks = False$/;"	v	class:TestSettings
value	src/patroller_gpio.py	/^    def value(self, pin):$/;"	m	class:Patroller_GPIO	access:public
xmlrunner	test/suite.py	/^import xmlrunner$/;"	i
